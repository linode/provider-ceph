# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  creationTimestamp: null
  name: provider-ceph 
spec:
  steps:
  - name: Assert that Crossplane has been installed.
    try:
    - assert:
        resource:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: crossplane
            namespace: crossplane-system
          status:
            readyReplicas: 1
    - assert:
        resource:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: crossplane-rbac-manager
            namespace: crossplane-system
          status:
            readyReplicas: 1
    - assert:
        resource:
          apiVersion: apiextensions.k8s.io/v1
          kind: CustomResourceDefinition
          metadata:
            name: providerconfigs.ceph.crossplane.io

  - name: Create ProviderConfig for ceph-cluster.
    try:
    - command:
        entrypoint: ../../../hack/install-pc-ceph-cluster.sh
    - assert:
        resource:
          apiVersion: ceph.crossplane.io/v1alpha1
          kind: ProviderConfig
          metadata:
            name: ceph-cluster
          status:
            conditions:
            - reason: HealthCheckSuccess
              status: "True"
              type: Ready

  - name: Apply test-bucket and test-bucket-all.
    try:
    - apply:
        resource:
          apiVersion: provider-ceph.ceph.crossplane.io/v1alpha1
          kind: Bucket
          metadata:
            name: test-bucket
            labels:
              provider-ceph.crossplane.io/validation-required: "true"
          spec:
            providers:
            - ceph-cluster
            forProvider: {} 
    - apply:
        resource:
          apiVersion: provider-ceph.ceph.crossplane.io/v1alpha1
          kind: Bucket
          metadata:
            name: test-bucket-all
            labels:
              provider-ceph.crossplane.io/validation-required: "true"
          spec:
            forProvider: {} 
    - assert:
        resource:
          apiVersion: provider-ceph.ceph.crossplane.io/v1alpha1
          kind: Bucket
          metadata:
            name: test-bucket
            finalizers:
            - "finalizer.managedresource.crossplane.io"
            - "bucket-in-use.provider-ceph.crossplane.io"
          status:
            atProvider:
              backends:
                ceph-cluster: 
                  bucketCondition:
                    reason: Available
                    status: "True"
                    type: Ready
            conditions:
            - reason: Available
              status: "True"
              type: Ready
            - reason: ReconcileSuccess
              status: "True"
              type: Synced
    - assert:
        resource:
          apiVersion: provider-ceph.ceph.crossplane.io/v1alpha1
          kind: Bucket
          metadata:
            name: test-bucket-all
            finalizers:
            - "finalizer.managedresource.crossplane.io"
            - "bucket-in-use.provider-ceph.crossplane.io"
          status:
            atProvider:
              backends:
                ceph-cluster:
                  bucketCondition:
                    reason: Available
                    status: "True"
                    type: Ready
            conditions:
            - reason: Available
              status: "True"
              type: Ready
            - reason: ReconcileSuccess
              status: "True"
              type: Synced      

  - name: Check buckets exist on ceph-cluster.
    try:
    - command:
        args:
        - bucket_exists
        - test-bucket
        - $CEPH_ADDRESS
        entrypoint: ../../../hack/expect_bucket.sh
    - command:
        args:
        - bucket_exists
        - test-bucket-all
        - $CEPH_ADDRESS
        entrypoint: ../../../hack/expect_bucket.sh

  - name: Apply lifecycle configuration to test-bucket.
    try:
    - apply:
        resource: 
          apiVersion: provider-ceph.ceph.crossplane.io/v1alpha1
          kind: Bucket
          metadata:
            name: test-bucket
          spec:
            providers:
            - ceph-cluster
            forProvider:
              lifecycleConfiguration:
                # Example rules from https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html
                rules:
                - id: "Transition and Expiration Rule"
                  filter:
                    prefix: "tax/"
                  status: "Enabled"
                  transitions:
                  - days: 365
                    storageClass: "STANDARD_IA"
                  expiration:
                    days: 3650
                - id: "ClassADocRule"
                  status: "Enabled"
                  transitions:
                  - date: "2035-01-01T00:00:00Z"
                    storageClass: "GLACIER"
                  expiration:
                    date: "2045-01-01T00:00:00Z"
                - id: "ClassBDocRule"
                  filter:
                    prefix: "classB"
                  status: "Enabled"
                  transitions:
                  - days: 90
                    storageClass: "DEEP_ARCHIVE"
                  expiration:
                    days: 365
    - assert:
        resource:
          apiVersion: provider-ceph.ceph.crossplane.io/v1alpha1
          kind: Bucket
          metadata:
            name: test-bucket
            finalizers:
            - "finalizer.managedresource.crossplane.io"
            - "bucket-in-use.provider-ceph.crossplane.io"
          status:
            atProvider:
              backends:
                ceph-cluster: 
                  bucketCondition:
                    reason: Available
                    status: "True"
                    type: Ready
                  lifecycleConfigurationCondition:
                    reason: Available
                    status: "True"
                    type: Ready
            conditions:
            - reason: Available
              status: "True"
              type: Ready
            - reason: ReconcileSuccess
              status: "True"
              type: Synced

  - name: Disable lifecycle configuration on test-bucket.
    try:
    - apply:
        resource:
          apiVersion: provider-ceph.ceph.crossplane.io/v1alpha1
          kind: Bucket
          metadata:
            name: test-bucket
            labels:
              provider-ceph.crossplane.io/validation-required: "true"
          spec:
            providers:
            - ceph-cluster
            lifecycleConfigurationDisabled: true
            forProvider:
              lifecycleConfiguration:
                # Example rules https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html
                rules:
                - id: "Transition and Expiration Rule"
                  filter:
                    prefix: "tax/"
                  status: "Enabled"
                  transitions:
                  - days: 365
                    storageClass: "STANDARD_IA"
                  expiration:
                    days: 3650
                - id: "ClassADocRule"
                  status: "Enabled"
                  transitions:
                  - days: 365
                    storageClass: "GLACIER"
                  expiration:
                    days: 3650
                - id: "ClassBDocRule"
                  filter:
                    prefix: "classB"
                  status: "Enabled"
                  transitions:
                  - days: 90
                    storageClass: "DEEP_ARCHIVE"
                  expiration:
                    days: 365
    - assert:
        resource:
          apiVersion: provider-ceph.ceph.crossplane.io/v1alpha1
          kind: Bucket
          metadata:
            name: test-bucket
            finalizers:
            - "finalizer.managedresource.crossplane.io"
            - "bucket-in-use.provider-ceph.crossplane.io"
          status:
            atProvider:
              backends:
                ceph-cluster:
                  bucketCondition:
                    reason: Available
                    status: "True"
                    type: Ready
            conditions:
            - reason: Available
              status: "True"
              type: Ready
            - reason: ReconcileSuccess
              status: "True"
              type: Synced

  - name: Delete test-bucket and test-bucket-all.
    try:
    - delete:
        ref:
          apiVersion: provider-ceph.ceph.crossplane.io/v1alpha1
          kind: Bucket
          name: test-bucket
    - delete:
        ref:
          apiVersion: provider-ceph.ceph.crossplane.io/v1alpha1
          kind: Bucket
          name: test-bucket-all
    - error:
        resource:
          apiVersion: provider-ceph.ceph.crossplane.io/v1alpha1
          kind: Bucket
          metadata:
            name: test-bucket
    - error:
        resource:
          apiVersion: provider-ceph.ceph.crossplane.io/v1alpha1
          kind: Bucket
          metadata:
            name: test-bucket-all

  - name: Check that bucket-test and bucket-test-all are removed from ceph-cluster.
    try:
    - command:
        args:
        - bucket_does_not_exist
        - test-bucket
        - $CEPH_ADDRESS
        entrypoint: ../../../hack/expect_bucket.sh
    - command:
        args:
        - bucket_does_not_exist
        - test-bucket-all
        - $CEPH_ADDRESS
        entrypoint: ../../../hack/expect_bucket.sh

  - name: Delete ceph-cluster ProviderConfig.
    try:
    - delete:
        ref:
          apiVersion: ceph.crossplane.io/v1alpha1
          kind: ProviderConfig
          name: ceph-cluster
    - error:
        resource:
          apiVersion: ceph.crossplane.io/v1alpha1
          kind: ProviderConfig
          metadata:
          name: ceph-cluster

  - name: Check that lifecycle configuration validation bucket is removed from ceph-cluster.
    try:
    - sleep:
        duration: 8s
    - command:
        args:
        - bucket_does_not_exist
        - lifecycle-config-validation-bucket
        - $CEPH_ADDRESS
        entrypoint: ../../../hack/expect_bucket.sh
